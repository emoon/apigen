chunk = _{ SOI ~ (type_value | const_value | structdef | uniondef | moddef | callbackdef | enumdef | doc_comment)+ ~ EOI }

structdef   =  { attributes? ~ traits? ~ ("struct") ~ name ~ derive? ~ ("{") ~ fieldlist? ~ ("}") }
uniondef    =  { attributes? ~ traits? ~ ("union") ~ name ~ ("{") ~ fieldlist_u? ~ ("}") }
callbackdef =  { ("callback") ~ function }
moddef      =  { ("mod") ~ name }
const_value =  { "const" ~ name ~ "=" ~ name_or_num? ~ raw_string? }
type_value  =  { "type" ~ name ~ "=" ~ name }
enumdef     =  { (attributes | enum_flags)*? ~ ("enum") ~ name ~ ("{") ~ fieldlist? ~ ("}") }
fieldlist   =  { (doc_comment | field)*  }
fieldlist_u =  { (doc_comment | field_u)*  }
field_u     =  { var ~ fieldsep? }
field       =  { (var | function | enum_type) ~ fieldsep? }
fieldsep    = _{ (",") }

rettype      = { name }
enum_flags   = { ("[enum_flags(") ~ name ~ (")]") }
attributes   = { ("#[attributes(") ~ namelist ~ (")]") }
traits       = { ("[traits(") ~ namelist ~ (")]") }
derive       = { (":") ~ namelist? }
drop_typ     = { ("[drop]") }
manual_typ   = { ("[manual]") }
static_typ   = { ("[static]") }
const_ptr_exp  = { ("*const ") }
pointer_exp  = { ("*") }
refexp       = { ("&") }
default_val  = { ("=") ~ name_or_num? ~ string? }
optional     = { ("?") }
array_size   = { (";") ~ name_or_num }
array        = { ("[") ~ (const_ptr_exp | refexp | pointer_exp)? ~ vtype ~ array_size? ~ ("]") ~ optional? }
retexp       = { ("->") ~ (const_ptr_exp | refexp | pointer_exp)? ~ (vtype | array) ~ optional? }
var          = { name ~ (":") ~ (const_ptr_exp | refexp | pointer_exp)? ~ (vtype | array) ~ default_val? }
varlist      = { (var | array) ~ ((",") ~ (var | array))* }
enum_assign  = { ("=") ~ name_or_num }
enum_type    = { name ~ enum_assign? }
namelist     = { name ~ ((",") ~ name)* }
function     = { (manual_typ | static_typ | drop_typ)*? ~ name ~ ("(") ~ varlist? ~ (")") ~ retexp? }

name = @{
	(('a'..'z') | ('A'..'Z') | ("_")) ~ (('a'..'z') | ('A'..'Z') | ("_") | ('0'..'9'))*
}

name_with_namespace = @{
	(('a'..'z') | ('A'..'Z') | ("_")) ~ (('a'..'z') | ('A'..'Z') | ("::") | ("_") | ('0'..'9'))*
}

name_or_num = @{
	(('a'..'z') | ('A'..'Z') | ("_") | ('0'..'9'))*
}

raw_string = {
    "\"" ~ raw_string_interior ~ "\""
}

raw_string_interior = {
    (!("\"") ~ ANY)*
}

string = @{
	( "\"" ~ name_or_num ~ "\"")*
}

vtype = @{
	(('a'..'z') | ('A'..'Z') | ("_")) ~ (('a'..'z') | ('A'..'Z') | ("_") | ('0'..'9'))*
}

COMMENT = _{
	("//") ~ !("/") ~ (!(("\r") | ("\n")) ~ ANY)* ~ (("\n") | ("\r\n") | ("\r") | EOI)
}

doc_comment = @{
	((" ")*) ~ ("///") ~ (!NEWLINE ~ ANY)*
}

WHITESPACE = _{ (" ") | ("\t") | ("\u{000C}") | ("\r") | ("\n") }

